<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://mybatis.org/schema/mybatis-spring 
		http://mybatis.org/schema/mybatis-spring-1.2.xsd">

	<!-- spring和MyBatis完美整合 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"
		p:dataSource-ref="dataSource" 
		p:configLocation="classpath:config/spring/mybatis-config.xml"
		p:mapperLocations="classpath:config/mapper/**/*.xml" />
		
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"
		p:basePackage="com.qiuxu.ssm.dao" 
		p:annotationClass="com.qiuxu.common.annotation.MyBatisDao"
		p:sqlSessionFactoryBeanName="sqlSessionFactory" />
		
	<!-- 数据源 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close" 
		p:driverClassName="${jdbc.driver}"
		p:url="${jdbc.url}" 
		p:username="${jdbc.username}" 
		p:password="${jdbc.password}"
		p:maxActive="${dataSource.maxActive}" 
		p:initialSize="${dataSource.initialSize}"
		p:maxWait="${dataSource.maxWait}" 
		p:minIdle="${dataSource.minIdle}"
		p:timeBetweenEvictionRunsMillis="${dataSource.timeBetweenEvictionRunsMillis}"
		p:minEvictableIdleTimeMillis="${dataSource.minEvictableIdleTimeMillis}"
		p:validationQuery="${dataSource.validationQuery}" 
		p:testWhileIdle="${dataSource.testWhileIdle}"
		p:testOnBorrow="${dataSource.testOnBorrow}" 
		p:testOnReturn="${dataSource.testOnReturn}"
		p:maxOpenPreparedStatements="${dataSource.maxOpenPreparedStatements}"
		p:removeAbandoned="${dataSource.removeAbandoned}"
		p:removeAbandonedTimeout="${dataSource.removeAbandonedTimeout}"
		p:logAbandoned="${dataSource.logAbandoned}" />

 	<!-- 定义事务 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
</beans>
